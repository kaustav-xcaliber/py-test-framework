# ========================================
# API Test Framework Environment Variables
# ========================================
# 
# Copy this file to .env and update the values below
# to match your local PostgreSQL and Redis setup
#
# Database Configuration
# Update these values to match your PostgreSQL setup
DATABASE_URL=postgresql://user:password@localhost:5432/api_test_framework
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=api_test_framework
DATABASE_USER=user
DATABASE_PASSWORD=password

# Redis Configuration
# Update these values to match your Redis setup
REDIS_URL=redis://localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# Application Configuration
APP_NAME=API Test Framework
APP_VERSION=1.0.0
DEBUG=true
LOG_LEVEL=INFO
SECRET_KEY=your-secret-key-here
ALLOWED_HOSTS=localhost,127.0.0.1

# Server Configuration
HOST=0.0.0.0
PORT=8000
WORKERS=4

# Test Execution Configuration
MAX_CONCURRENT_TESTS=10
TEST_TIMEOUT_SECONDS=300
DEFAULT_REQUEST_TIMEOUT=30

# File Upload Configuration
MAX_FILE_SIZE=10485760  # 10MB
UPLOAD_DIR=./uploads

# CORS Configuration
CORS_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_ALLOW_CREDENTIALS=true

# ========================================
# Setup Instructions:
# ========================================
# 1. Copy this file to .env: cp env.example .env
# 2. Update DATABASE_URL, DATABASE_USER, and DATABASE_PASSWORD 
#    to match your PostgreSQL credentials
# 3. Update REDIS_URL if your Redis setup is different
# 4. Generate a secure SECRET_KEY for production use
# 5. Restart the application after making changes
